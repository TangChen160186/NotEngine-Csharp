<Application x:Class="NotEngine.Editor.Lanuch.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="MainWindowStyle"
               TargetType="mah:MetroWindow"
               BasedOn="{StaticResource {x:Type mah:MetroWindow}}">
            <Setter Property="WindowTitleBrush" Value="#282c34" />
            <Setter Property="NonActiveWindowTitleBrush" Value="#282c34" />
            <Setter Property="TitleCharacterCasing" Value="Normal" />
            <Setter Property="GlowBrush" Value="#7160e8" />
            <Setter Property="NonActiveGlowBrush" Value="#3d3d3d" />
        </Style>


        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <!--WindowCommandsItem-->
        <Style TargetType="{x:Type mah:WindowCommandsItem}">
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=ParentWindowCommands.Foreground, Mode=OneWay}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="MinHeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=ParentWindowCommands.ParentWindow.TitleBarHeight, Mode=OneWay}" />
            <Setter Property="Padding" Value="1 0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type mah:WindowCommandsItem}">
                        <StackPanel HorizontalAlignment="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:WindowCommandsItem}},
                                    Path=ParentWindowCommands.HorizontalContentAlignment, Mode=OneWay}"
                                    VerticalAlignment="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:WindowCommandsItem}},
                                    Path=ParentWindowCommands.VerticalContentAlignment, Mode=OneWay}"
                                    Orientation="Horizontal">
                            <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Rectangle x:Name="PART_Separator"

                                       Width="1"
                                       Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}, Path=TitleBarHeight, Mode=OneWay}"
                                       Fill="{DynamicResource TitleBarSeparator}"
                                       IsHitTestVisible="False"
                                       SnapsToDevicePixels="True"
                                       UseLayoutRounding="True" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSeparatorVisible" Value="False">
                                <Setter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- base button style for min, max and close window buttons -->
        <Style x:Key="MetroBaseWindowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="grid"
                                Background="#21252b"
                                BorderBrush="Transparent"
                                BorderThickness="1 0 1 1">
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=grid}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="grid" Property="Background" Value="#95b9ff" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- default button style for min, max and close window buttons -->
        <Style x:Key="MetroWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroBaseWindowButtonStyle}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Height" Value="26" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <Style TargetType="{x:Type mah:WindowButtonCommands}">
            <Setter Property="DarkCloseButtonStyle" Value="{StaticResource MetroWindowButtonStyle}" />
            <Setter Property="DarkMaxButtonStyle" Value="{StaticResource MetroWindowButtonStyle}" />
            <Setter Property="DarkMinButtonStyle" Value="{StaticResource MetroWindowButtonStyle}" />
            <Setter Property="LightCloseButtonStyle" Value="{StaticResource MetroWindowButtonStyle}" />
            <Setter Property="LightMaxButtonStyle" Value="{StaticResource MetroWindowButtonStyle}" />
            <Setter Property="LightMinButtonStyle" Value="{StaticResource MetroWindowButtonStyle}" />
        </Style>
    </Application.Resources>
</Application>
